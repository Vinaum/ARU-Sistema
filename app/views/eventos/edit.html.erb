 <div class='content-box center-form'>

	 <%= simple_nested_form_for [@republica, @evento], html: {method: :put, id: 'evento_form', novalidate: 'novalidate'}, :url => republica_evento_path(@republica, @evento) do |f| %>
	 <%= f.error_notification %>
	 <%= display_all_errors @evento %>

	<div class="">

		<h1><%= @evento.nome + " #{@evento.ano}" %></h1>

		<p style='font-size: 12px'>Selecione aqui as modalidades que a República irá jogar e, logo em seguida, os moradores, ex-moradores e agregados.</p>

	</div>

		<% if @modalidades.any? %>
			<h3>Modalidades</h3>
			<% @modalidades.try(:each) do |tipo, mod| %>
			<!-- So mostra modalidades que a republica pode jogar -->
				<% if tipo == "Mista" || @republica.tipo == "Mista" || (tipo == @republica.tipo) %>

					<span class="label label-info"><%= tipo + "s" %></span>
					<!-- Quando falha o update -->
					<% if params[:evento].try(:[], :play_mods_ids).present? %>
						<%= f.input :play_mods_ids, collection: mod, value_method: lambda { |m| @evento.evento_modalidades.where(modalidade_id: m.id).first.id}, label: false, label_method: :nome,  as: :check_boxes, :checked => params[:evento].try(:[], :play_mods_ids) %>
					<% else %>
						<%= f.input :play_mods_ids, collection: mod, value_method: lambda { |m| @evento.evento_modalidades.where(modalidade_id: m.id).first.id}, label: false, label_method: :nome,  as: :check_boxes, :checked => @evento.republica_evento_modalidades.where(republica_id: @republica.id).collect(&:evento_modalidade_id) %>
					<% end %>

				<% end %>
			<% end %>
		<% end %>

		 <%-# f.association :evento_modalidades, collection: mod, label: false, label_method: :nome, as: :check_boxes -%>

	 <h3>Moradores</h3>


	 <% if params[:evento].try(:[], :morador_ids).present? %>
			<%= f.association :moradores, collection: current_republica.moradores.atual, label: false, label_method: :full_name, as: :check_boxes, :checked => params[:evento].try(:[], :morador_ids) %>
	 <% else %>
			<%= f.association :moradores, collection: current_republica.moradores.atual, label: false, label_method: :full_name, as: :check_boxes %>
		<% end %>


	 <% if [@evento.max1_ex, @evento.max1_ag, @evento.max2_ex, @evento.max2_ag].max != 0 %>

	 <hr>

		<!-- Cria novo field de opcao se nao existir -->
		<% if !params[:evento].try(:[], :evento_republicas_attributes).try(:[], "0").try(:[], :opcao).present? %>
		<%= f.simple_fields_for :evento_republicas, (@evento.evento_republicas.find_with_option(current_republica).first || @evento.evento_republicas.build) do |r| %>
			<%= r.input :opcao, :collection => [[1, "#{f.object.max1_ex} Ex-moradores e #{f.object.max1_ag} Agregados"], [2, "#{f.object.max2_ex} Ex-moradores e #{f.object.max2_ag} Agregados"]], :label_method => :last, :value_method => :first, :as => :radio_buttons, label: "<i class='icon-info-sign'></i> Escolha uma das opções abaixo:" %>
			<%= r.hidden_field :republica_id, value: @republica.id %>
		 <% end %>
		<% else %>
		 <%= f.simple_fields_for :evento_republicas, (@evento.evento_republicas.find_with_option(current_republica).first || @evento.evento_republicas.build) do |r| %>
			<%= r.input :opcao, :collection => [[1, "#{f.object.max1_ex} Ex-moradores e #{f.object.max1_ag} Agregados"], [2, "#{f.object.max2_ex} Ex-moradores e #{f.object.max2_ag} Agregados"]], :label_method => :last, :value_method => :first, :as => :radio_buttons, label: "<i class='icon-info-sign'></i> Escolha uma das opções abaixo:", checked:  params[:evento].try(:[], :evento_republicas_attributes).try(:[], "0").try(:[], :opcao) %>
			<%= r.hidden_field :republica_id, value: @republica.id %>
		 <% end %>
		<% end %>


		<!-- Opcao de exmorador e agregado antiga -->
		<% if false %>
		 <% if params[:evento].try(:[],:opcao_exag).present? %>
				<%= f.input :opcao_exag, :collection => [[1, "#{f.object.max1_ex} Ex-moradores e #{f.object.max1_ag} Agregados"], [2, "#{f.object.max2_ex} Ex-moradores e #{f.object.max2_ag} Agregados"]], :label_method => :last, :value_method => :first, :as => :radio_buttons, label: "<i class='icon-info-sign'></i> Escolha uma das opções abaixo:", checked:  params[:evento].try(:[],:opcao_exag) %>
		 <% else %>
				<%= f.input :opcao_exag, :collection => [[1, "#{f.object.max1_ex} Ex-moradores e #{f.object.max1_ag} Agregados"], [2, "#{f.object.max2_ex} Ex-moradores e #{f.object.max2_ag} Agregados"]], :label_method => :last, :value_method => :first, :as => :radio_buttons, label: "<i class='icon-info-sign'></i> Escolha uma das opções abaixo:" %>
		 <% end %>
		<% end %>

	 <% end %>


	 <% if [@evento.max1_ex, @evento.max2_ex].max != 0 %>
		 <h3>Ex-Moradores</h3>

		 <% if @exmoradores_ajogar.any? %>
			 <small>Lembre-se: só estão disponíveis ex-moradores que já jogaram como moradores em InterReps passados.</small>

			<div id="exmoradores">
			 <% if params[:evento].try(:[],:exmorador_ids).present?  %>
					<%= f.association :exmoradores, collection: @exmoradores_ajogar, label: false, label_method: :full_name, as: :check_boxes, :checked => params[:evento].try(:[],:exmorador_ids) %>
			 <% else %>
					<%= f.association :exmoradores, collection: @exmoradores_ajogar, label: false, label_method: :full_name, as: :check_boxes%>
			 <% end %>
			</div>

		<% else %>
			<small>A sua República não possui ex-moradores que já jogaram em anos anteriores como moradores.</small>
		<% end %>

	 <% end %>

	<%= f.hidden_field :max1_ex %>
	<%= f.hidden_field :max2_ex %>
	<%= f.hidden_field :max1_ag %>
	<%= f.hidden_field :max2_ag %>

	<% if [@evento.max1_ag, @evento.max2_ag].max != 0 %>
	 <h3>Agregados</h3>
	 <%# raise error %>


		<!-- Cria novo field de agregados se nao existir -->
		<% if true || (x = @evento.evento_republicas.find_with_option(current_republica)).any? %>

		 <%= f.simple_fields_for :evento_republicas, @agregados do |r| %>
			<%= r.input :agregado, placeholder: 'Agregado', label: false, input_html: {class: 'agregado'} %>
			<%= r.hidden_field :republica_id, value: @republica.id %>
		 <% end %>

		<% end %>

	<% end %>


	<div class="form-actions" id='cadastro_actions'>
		<% content_for :link_to_terms do %>
		 Aceito os <%= link_to "Termos de Inscrição", "#terms-modal", "data-toggle" => "modal"  %>
		<% end %>
		<%= f.input :terms_of_service,  as: :boolean, inline_label: "#{content_for :link_to_terms}".html_safe, label: false, error: false %>
		<% if @evento.inscrito?(current_republica) %>
			<p class='terms_text pull-left'>Ao clicar no botão 'Atualizar Inscrição', você confirma que os moradores e seus respectivos dados são verdadeiros.</p>
			<%= f.submit 'Atualizar Inscrição',  class: 'btn btn-primary', id: "inscrever_evento" %>
		<% else %>
			<p class='terms_text pull-left'>Ao clicar no botão 'Efetuar Inscrição', você confirma que os moradores e seus respectivos dados são verdadeiros.</p>
			<%= f.submit 'Efetuar Inscrição',  class: 'btn btn-primary', id: "inscrever_evento" %>
		<% end %>

		<%= link_to 'Cancel', eventos_path, class: 'btn' %>
	</div>


	<div class='modal hide fade' id="terms-modal">

		<div class='modal-header'>
			<h3>Termos de Inscrição</h3>
		</div>

		<div class='modal-body'>
			<div style='word-wrap: break-word;'>
				<%= simple_format @evento.terms_text, class: 'description' %>
			</div>
		</div>

		<div class='modal-footer'>
			<p class='btn btn-success btn-small' data-dismiss="modal">OK</p>
		</div>
	</div>



	<% end %>
</div>